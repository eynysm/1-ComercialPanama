<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        s9/FfcMvFgAAAABJRU5ErkJggg==
</value>
  </data>
</root>